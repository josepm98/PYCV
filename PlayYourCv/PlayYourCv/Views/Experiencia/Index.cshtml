@model PlayYourCV.Models.Contenido

@{
    ViewBag.Title = "Index";
    List<PlayYourCV.Models.Contenido> listaExp = (List<PlayYourCV.Models.Contenido>)ViewData["lista"];
}

<div class="container">
    <div class="row">

        <div class="col-xs-12 col-md-2">

            <h2>Experiencia</h2>

        </div>
        <div class="col-xs-6 col-md-2">
            <div class="bityconsejo"><img class="Bityicon img-responsive" src="~/Content/images/mascota/Bityhelp_ani.gif" type="button" data-toggle="modal" data-target="#Bitymodal" /></div>
        </div>
        <div class="col-xs-6 col-md-offset-6 col-md-2">
            <button type="button" class="btn btn-info" data-toggle="modal" data-target="#myCreate">Añadir Experiencia</button>
        </div>
    </div>
    <!-- Modal Bity-->
    <div class="modal fade" id="Bitymodal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-body">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <div class="img-mascota">
                        <img class="BityAnimado img-responsive center-block" src="~/Content/images/mascota/Robot_4.png" />

                        <p style="margin-top:20px;font-weight: 600;">
                            Explica de manera clara y concisa cuales eran tus tareas y responsabilidades. <br /><br />
                            Siempre es interesante que describas lo que has aprendido, incluso en la entrevista puedes comentar un problema que solucionaras y explicar cómo.
                        </p>
                    </div>

                </div>

                <!--Cerrar Model Content-->
            </div>

        </div>
    </div>
    <!--FIN MODAL-->
    @{
        if (listaExp != null)
        {

            foreach (PlayYourCV.Models.Contenido c in listaExp)
            {
                string fechaIni;
                if (c.FechaInicio.Equals(default(DateTime)))
                {
                    fechaIni = "";
                }
                else
                {
                    fechaIni = String.Format("{0:yyyy-MM-dd}", c.FechaInicio);
                }

                string fechaFin;
                if (c.FechaFin.Equals(default(DateTime)))
                {
                    fechaFin = "";
                }
                else
                {
                    fechaFin = String.Format("{0:yyyy-MM-dd}", c.FechaFin);
                }





                <div class="jumbotron col-sm-12">

                    <div class="col-sm-12">
                        <h3 class="pos_edit"><strong>@c.Posicion</strong></h3>
                        <input type="hidden" class="idedit" value="@c.Id" />
                    </div>

                    <div class="col-md-12">
                        <p class="emp_edit">@c.EmpresaEscuela</p>
                        <input type="hidden" value="@c.Id" />
                    </div>

                    <div class="col-md-12">
                        <p class="lug_edit">@c.Lugar</p>
                        <input type="hidden" value="@c.Id" />
                    </div>

                    <div class="col-sm-2">
                        <label class="fin_edit">@fechaIni</label>
                        <input type="hidden" value="@c.Id" />
                    </div>

                    <div class="col-sm-10">
                        <label class="ffi_edit">@fechaFin</label>
                        <input type="hidden" value="@c.Id" />
                    </div>

                    <div class="col-md-12">
                        <p class="des_edit">@c.Descripcion</p>
                        <input type="hidden" value="@c.Id" />
                    </div>


                    <div class="col-sm-12" style="text-align:end">
                        <div class="col-xs-2 col-lg-offset-10 col-lg-1" style="color:gray;">
                            <i type="button" onclick="deleteExp(@c.Id)" class="boton far fa-trash-alt fa-2x"></i>
                        </div>
                        <div class="col-sm-1 col-lg-1" style="color:#7ECFE3; float:right; ">
                            <i type="button" data-toggle="modal" data-target="#myEdit" class="boton fas fa-edit fa-2x mostraedit "></i>
                        </div>
                    </div>

                </div>


            }
        }
    }


    <!-- Modal Edit -->
    <div id="myEdit" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal Edit content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edita esta experiencia</h4>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("Edit", "Experiencia", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id, htmlAttributes: new { @id = "idtarget" })

                            <div class="form-group">
                                <label class="control-label col-md-2">Puesto</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Posicion, new { htmlAttributes = new { @class = "form-control", @id = "pos_target" } })
                                    @Html.ValidationMessageFor(model => model.Posicion, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Empresa</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmpresaEscuela, new { htmlAttributes = new { @class = "form-control", @id = "emp_target" } })
                                    @Html.ValidationMessageFor(model => model.EmpresaEscuela, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Lugar, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Lugar, new { htmlAttributes = new { @class = "form-control", @id = "lug_target" } })
                                    @Html.ValidationMessageFor(model => model.Lugar, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control", @id = "fin_target", @type = "date", @value = "@fechaIni" } })
                                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control", @id = "ffi_target", @type = "date", @value = "@fechaFin" } })
                                    @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Descripción</label>
                                <div class="col-md-10">
                                    <textarea class="input pretextarea" id="des_target" name="Descripcion" type="text"></textarea>
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger, bigtext" })
                                </div>
                            </div>



                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Guardar" class="btn btn-default" />
                                </div>
                            </div>
                        </div>

                    }

                </div>

            </div>
        </div>
    </div>



    <!-- Modal Create -->
    <div id="myCreate" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal Create content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Nueva experiencia</h4>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("Create", "Experiencia", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                <label class="control-label col-md-2">Puesto</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Posicion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Posicion, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-2">Empresa</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.EmpresaEscuela, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.EmpresaEscuela, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Lugar, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Lugar, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Lugar, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FechaFin, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FechaFin, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                    @Html.ValidationMessageFor(model => model.FechaFin, "", new { @class = "text-danger" })
                                </div>

                            </div>


                            <div class="form-group">
                                <label class="control-label col-md-2">Descripción</label>
                                <div class="col-md-10">
                                    <textarea class="input pretextarea" id="des_target" name="Descripcion" type="text"></textarea>
                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                </div>
                            </div>




                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Crear" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }


                </div>

            </div>
        </div>
    </div>
</div>


            <script>
                function deleteExp(i) {
                    res = confirm('¿Estás segura de querer eliminar esta experiencia?');
                    if (res) {
                        window.location.replace("/Experiencia/Delete/" + i);
                    }
                }
                function add(i) {
                    window.location.replace("/Experiencia/Create/");
                }
                function editExp(i) {
                    window.location.replace("/Experiencia/Edit/" + i);
                }
                window.onload = function () {
                    if (
                        window.location.href.split("/")[window.location.href.split("/").length - 1] != "Index"
                    ) {
                        window.location.replace("/Experiencia/Index");
                    }
                }

                $(document).on("click", ".mostraedit", function () {
                    $("#idtarget").val($(this).closest(".jumbotron").find(".idedit").val());
                    $("#pos_target").val($(this).closest(".jumbotron").find(".pos_edit").text());
                    $("#emp_target").val($(this).closest(".jumbotron").find(".emp_edit").text());
                    $("#lug_target").val($(this).closest(".jumbotron").find(".lug_edit").text());
                    $("#fin_target").val($(this).closest(".jumbotron").find(".fin_edit").text());
                    $("#ffi_target").val($(this).closest(".jumbotron").find(".ffi_edit").text());
                    $("#des_target").val($(this).closest(".jumbotron").find(".des_edit").text());

                });

            </script>



            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }
